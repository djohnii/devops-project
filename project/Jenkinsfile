

// pipeline {
//     agent {
//         label "agent-1"
//     } 
//     environment {
//         registry = "alwx1753/devops-project"
//         registryCredential = 'dockerhub'
//         dockerImage = ''
//         taglatest = sh(script: 'git describe $(git rev-parse @) --tags --abbrev=0', returnStdout: true).trim()
//         // penultimate = sh(script: 'git describe $(git rev-parse @~~) --tags --abbrev=0', returnStdout: true).trim()
//     }
//     stages {
//         stage('build docker image'){
//             steps{
//                 script{
//                         dir('project/docker'){
//                             dockerImage = docker.build registry + ":latest"
//                         }
//                 }
//             }
//         }
//         stage('deploy image') {
//             steps{
//                 script{
//                     def latest_docker_image = sh(script: 'docker images --format "{{.Repository}}:{{.Tag}}" --no-trunc | head -n 1', returnStdout: true).trim()
//                     sh "sed -i 's|image:.*|image: latest|' project/k8s/myapp/myapp.yml"                       
//                         // sh "sed -i 's|image:.*|image: ${dockerImage}:latest|' project/k8s/myapp/myapp.yml"
//                     docker.withRegistry( '', registryCredential ) {
//                         dockerImage.push("latest")
//                     }
//                 }
//             }
//         }
//         stage('deploy to k8s'){
//             steps{
//                 script{
//                     dir('project/k8s/myapp'){
//                         sh "cat ./myapp.yml"
//                         // kubeconfig(credentialsId: 'TokenForKuber', serverUrl: 'https://158.160.38.130') {
//                             // sh "sed -i 's|image:.*|image: ${dockerImage}:${taglatest}|' project/k8s/myapp.yml"
//                         sh 'kubectl get pod -n jenkins'
//                         sh 'kubectl apply -f ./'
//                         // }

//                     }

//                 }
//             }
//         }
//     }
// }





node('agent-1') {
    // Define environment variables
    def registry = "alwx1753/devops-project"
    def registryCredential = 'dockerhub'
    def dockerImage = ''

    stage('build docker image') {
        script {
            dir('project/docker') {
                dockerImage = docker.build registry + ":latest"
            }
        }
    }

    stage('deploy image') {
        script {
            sh "sed -i 's|image:.*|image: latest|' project/k8s/myapp/myapp.yml"

            withDockerRegistry(credentialsId: 'docker_cred') {

                dockerImage.push("latest")
            }
            // docker.withRegistry(credentialsId: 'docker_cred') {
            //     dockerImage.push("latest")
            // }
        }
    }

    
        stage('deploy to k8s') {
        script {
            try {
                dir('project/k8s/myapp') {
                    sh "cat ./myapp.yml"
                    sh 'kubectl get pod -n jenkins'
                    sh 'kubectl apply -f ./'
                }
            } catch (Exception e) {
                // Handle the exception
                echo "An error occurred during deployment to Kubernetes: ${e.message}"
                // Optionally, you can fail the build
                currentBuild.result = 'FAILURE'
                error("Deployment failed: ${e.message}")
            }
        }
    }
}



